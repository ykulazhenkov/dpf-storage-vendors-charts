{{- if .Values.host.enabled }}
{{- $_ := required "host.config.dpuClusterSecret must be set" .Values.host.config.dpuClusterSecret }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nfs-csi-controller.fullname" . }}
  labels:
    {{- include "nfs-csi-controller.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "nfs-csi-controller.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.host.replicas }}
  template:
    metadata:
      labels:
        {{- include "nfs-csi-controller.selectorLabels" . | nindent 8 }}
        {{- with .Values.host.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- toYaml .Values.host.podAnnotations | nindent 8 }}
    spec:
      {{- with .Values.host.imagePullSecrets | default list }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.host.hostNetwork }}
      dnsPolicy: {{ .Values.host.dnsPolicy }}
      securityContext:
        {{- toYaml .Values.host.podSecurityContext | nindent 8 }}
      containers:
      - name: csi-provisioner
        image: "{{ .Values.host.externalProvisioner.image.repository }}:{{ .Values.host.externalProvisioner.image.tag }}"
        imagePullPolicy: {{ .Values.host.externalProvisioner.image.pullPolicy }}
        args:
        - "-v=2"
        - "--csi-address=$(ADDRESS)"
        - "--leader-election"
        - "--leader-election-namespace={{ .Release.Namespace }}"
        - "--extra-create-metadata=true"
        - "--feature-gates=HonorPVReclaimPolicy=true"
        - "--timeout=1200s"
        - "--retry-interval-max=30m"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
        securityContext:
          {{- toYaml .Values.host.externalProvisioner.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.host.externalProvisioner.resources | nindent 12 }}
      - name: csi-resizer
        image: "{{ .Values.host.externalResizer.image.repository }}:{{ .Values.host.externalResizer.image.tag }}"
        imagePullPolicy: {{ .Values.host.externalResizer.image.pullPolicy }}
        args:
        - "-csi-address=$(ADDRESS)"
        - "-v=2"
        - "-leader-election"
        - "--leader-election-namespace={{ .Release.Namespace }}"
        - '-handle-volume-inuse-error=false'
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
        securityContext:
          {{- toYaml .Values.host.externalResizer.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.host.externalResizer.resources | nindent 12 }}
      - name: csi-snapshotter
        image: "{{ .Values.host.externalSnapshotter.image.repository }}:{{ .Values.host.externalSnapshotter.image.tag }}"
        args:
          - "--v=2"
          - "--csi-address=$(ADDRESS)"
          - "--leader-election-namespace={{ .Release.Namespace }}"
          - "--leader-election"
          - "--timeout=1200s"
          - "--retry-interval-max=30m"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        imagePullPolicy: {{ .Values.host.externalSnapshotter.image.pullPolicy }}
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
        securityContext:
          {{- toYaml .Values.host.externalSnapshotter.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.host.externalSnapshotter.resources | nindent 12 }}
      - name: liveness-probe
        image: "{{ .Values.host.livenessProbe.image.repository }}:{{ .Values.host.livenessProbe.image.tag }}"
        args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --http-endpoint=localhost:29652
          - --v=2
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        securityContext:
          {{- toYaml .Values.host.livenessProbe.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.host.livenessProbe.resources | nindent 12 }}
      - name: nfs
        image: "{{ .Values.host.plugin.image.repository }}:{{ .Values.host.plugin.image.tag }}"
        imagePullPolicy: {{ .Values.host.plugin.image.pullPolicy }}
        args:
        - "-v=5"
        - "--nodeid=$(NODE_ID)"
        - "--endpoint=$(CSI_ENDPOINT)"
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        livenessProbe:
          failureThreshold: 5
          httpGet:
            host: localhost
            path: /healthz
            port: 29652
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
        volumeMounts:
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet/pods
          mountPropagation: "Bidirectional"
        - mountPath: /csi
          name: socket-dir
        securityContext:
          {{- toYaml .Values.host.plugin.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.host.plugin.resources | nindent 12 }}
      volumes:
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet/pods
          type: Directory
      - name: socket-dir
        emptyDir: {}
      - name: tokenfile
        projected:
          sources:
          - secret:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              items:
              - key: TOKEN_FILE
                path: token
          - secret:
              name: "{{ .Values.host.config.dpuClusterSecret }}"
              items:
              - key: KUBERNETES_CA_DATA
                path: ca.crt
      {{- with .Values.host.nodeSelector | default dict }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.host.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.host.tolerations | default list }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
